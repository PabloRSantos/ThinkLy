version: "3"
services:
  app:
    container_name: app
    hostname: app
    build: .
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - app_net
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
    links:
      - database
    depends_on:
      database:
        condition: service_healthy

  database:
    container_name: database
    hostname: database
    env_file:
      - .env
    image: postgres:17
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - ./database-setup.sql:/docker-entrypoint-initdb.d/database-setup.sql
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s   # d√° um tempo extra para inicializar

networks:
  app_net:
    driver: bridge
